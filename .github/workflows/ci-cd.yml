name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build --release --features cuda

    - name: Test
      run: cargo test --release --features cuda

    - name: Build Docker image
      run: |
        docker build -t fandango:latest --build-arg CUDA_VERSION=12.2.0 .
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push fandango:latest

    - name: Test image in k8s
      run: |
        minikube start --driver=docker --nodes 1 --addons=ingress --kubernetes-version=v1.28.0
        kubectl apply -f k8s/deployment.yaml
        sleep 60
        kubectl get pods
        kubectl logs -l app=fandango
        kubectl delete -f k8s/deployment.yaml
      env:
        TRITON_URL: "localhost:8001"

    - name: Cleanup
      if: always()
      run: minikube delete