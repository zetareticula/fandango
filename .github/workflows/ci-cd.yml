name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        components: rustfmt, clippy

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build --release --features cuda

    - name: Test
      run: cargo test --release --features cuda

    - name: Test Disaggregated Setup
      run: |
        mkdir -p build
        cd build
        cmake ..
        make -j100
        ./procp_server & # Simulate Control Plane
        ./csa_server &   # Simulate CSA
        sleep 5
        cargo run --release --bin fandango -- --db=/tmp/fandango

    - name: Cleanup
      if: always()
      run: pkill -f procp_server || true; pkill -f csa_server || true